public final class com/apollographql/execution/CompositeResolverBuilder {
	public fun <init> ()V
	public final fun build ()Lcom/apollographql/apollo/execution/Resolver;
	public final fun default (Lcom/apollographql/apollo/execution/Resolver;)V
	public final fun type (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)V
}

public final class com/apollographql/execution/CompositeResolverBuilder$TypeBuilder {
	public fun <init> ()V
	public final fun field (Ljava/lang/String;Lcom/apollographql/apollo/execution/Resolver;)V
}

public final class com/apollographql/execution/CompositeResolverKt {
	public static final fun compositeResolver (Lcom/apollographql/apollo/execution/ExecutableSchema$Builder;Lkotlin/jvm/functions/Function1;)Lcom/apollographql/apollo/execution/ExecutableSchema$Builder;
}

public abstract interface annotation class com/apollographql/execution/CompositeResolverMarker : java/lang/annotation/Annotation {
}

public final class com/apollographql/execution/SandboxKt {
	public static final fun sandboxHtml (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLDefault : java/lang/annotation/Annotation {
	public abstract fun value ()Ljava/lang/String;
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLDirective : java/lang/annotation/Annotation {
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLMutation : java/lang/annotation/Annotation {
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLName : java/lang/annotation/Annotation {
	public abstract fun name ()Ljava/lang/String;
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLQuery : java/lang/annotation/Annotation {
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLScalar : java/lang/annotation/Annotation {
	public abstract fun coercing ()Ljava/lang/Class;
}

public abstract interface annotation class com/apollographql/execution/annotation/GraphQLSubscription : java/lang/annotation/Annotation {
}

public final class com/apollographql/execution/websocket/ConnectionInitAck : com/apollographql/execution/websocket/ConnectionInitResult {
	public static final field INSTANCE Lcom/apollographql/execution/websocket/ConnectionInitAck;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/apollographql/execution/websocket/ConnectionInitError : com/apollographql/execution/websocket/ConnectionInitResult {
	public fun <init> ()V
	public fun <init> (Lcom/apollographql/apollo/api/Optional;)V
	public synthetic fun <init> (Lcom/apollographql/apollo/api/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getPayload ()Lcom/apollographql/apollo/api/Optional;
}

public abstract interface class com/apollographql/execution/websocket/ConnectionInitResult {
}

public final class com/apollographql/execution/websocket/GraphQLWsWebSocketHandler : com/apollographql/execution/websocket/WebSocketHandler {
	public fun <init> (Lcom/apollographql/apollo/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo/api/ExecutionContext;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lcom/apollographql/apollo/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo/api/ExecutionContext;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun close ()V
	public fun handleMessage (Lcom/apollographql/execution/websocket/WebSocketMessage;)V
}

public final class com/apollographql/execution/websocket/SubscriptionWebSocketHandler : com/apollographql/execution/websocket/WebSocketHandler {
	public fun <init> (Lcom/apollographql/apollo/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo/api/ExecutionContext;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)V
	public synthetic fun <init> (Lcom/apollographql/apollo/execution/ExecutableSchema;Lkotlinx/coroutines/CoroutineScope;Lcom/apollographql/apollo/api/ExecutionContext;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun close ()V
	public fun handleMessage (Lcom/apollographql/execution/websocket/WebSocketMessage;)V
}

public final class com/apollographql/execution/websocket/WebSocketBinaryMessage : com/apollographql/execution/websocket/WebSocketMessage {
	public fun <init> ([B)V
	public final fun getData ()[B
}

public abstract interface class com/apollographql/execution/websocket/WebSocketHandler {
	public abstract fun handleMessage (Lcom/apollographql/execution/websocket/WebSocketMessage;)V
}

public abstract interface class com/apollographql/execution/websocket/WebSocketMessage {
}

public final class com/apollographql/execution/websocket/WebSocketTextMessage : com/apollographql/execution/websocket/WebSocketMessage {
	public fun <init> (Ljava/lang/String;)V
	public final fun getData ()Ljava/lang/String;
}

public final class com/apollographql/execution/websocket/WsConnectionInitAck : com/apollographql/execution/websocket/WsConnectionInitResult {
	public static final field INSTANCE Lcom/apollographql/execution/websocket/WsConnectionInitAck;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/apollographql/execution/websocket/WsConnectionInitError : com/apollographql/execution/websocket/WsConnectionInitResult {
	public fun <init> ()V
	public fun <init> (Lcom/apollographql/apollo/api/Optional;)V
	public synthetic fun <init> (Lcom/apollographql/apollo/api/Optional;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getPayload ()Lcom/apollographql/apollo/api/Optional;
}

public abstract interface class com/apollographql/execution/websocket/WsConnectionInitResult {
}

