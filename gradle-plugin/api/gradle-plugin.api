public abstract class com/apollographql/execution/gradle/ApolloExecutionExtension {
	public fun <init> (Lorg/gradle/api/Project;)V
	public final fun getHasService ()Z
	public final fun getProject ()Lorg/gradle/api/Project;
	public final fun service (Ljava/lang/String;Lorg/gradle/api/Action;)V
	public final fun setHasService (Z)V
}

public abstract class com/apollographql/execution/gradle/ApolloExecutionPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public abstract class com/apollographql/execution/gradle/ApolloExecutionService {
	public fun <init> ()V
	public abstract fun getPackageName ()Ljava/lang/String;
	public abstract fun getSchemaPath ()Lorg/gradle/api/provider/Property;
	public abstract fun setPackageName (Ljava/lang/String;)V
}

public final class com/apollographql/execution/gradle/VersionKt {
	public static final field VERSION Ljava/lang/String;
}

public abstract class com/apollographql/execution/gradle/internal/CopySchema : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public abstract fun getFrom ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getTo ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun taskAction ()V
}

